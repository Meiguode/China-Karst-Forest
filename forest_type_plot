library(ggplot2)
library(dplyr)
library(readr)
library(tidyr)

# === 1. Load Data ===
t5_df <- read_csv("forest_yearly_T5_differences.csv")
mat_df <- read_csv("forest_yearly_MAT_differences.csv")
rs_df  <- read_csv("forest_yearly_Rs_differences.csv")

# === 2. Summarize warming ===
t5_summary <- t5_df %>%
  group_by(Forest.type) %>%
  summarize(Warming_years = sum(DiffT5 > 0, na.rm = TRUE), .groups = 'drop')

mat_summary <- mat_df %>%
  group_by(Forest.type) %>%
  summarize(MAT_warming = sum(DiffMAT > 0, na.rm = TRUE), .groups = 'drop')

rs_summary <- rs_df %>%
  group_by(Forest.type) %>%
  summarize(Mean_Rs_change = mean(DiffRs, na.rm = TRUE), .groups = 'drop')

# === 3. Merge all ===
t5_summary$Forest.type <- as.character(t5_summary$Forest.type)
mat_summary$Forest.type <- as.character(mat_summary$Forest.type)
rs_summary$Forest.type <- as.character(rs_summary$Forest.type)

df_summary <- full_join(t5_summary, mat_summary, by = "Forest.type") %>%
  full_join(rs_summary, by = "Forest.type") %>%
  mutate(
    Warming_years    = ifelse(is.na(Warming_years), 0, Warming_years),
    MAT_warming      = ifelse(is.na(MAT_warming), 0, MAT_warming),
    Mean_Rs_change   = ifelse(is.na(Mean_Rs_change), 0, Mean_Rs_change)
  )

# === 4. Define warming type symbols ===
df_summary <- df_summary %>%
  mutate(
    Warming_Type = case_when(
      Warming_years > 0 & MAT_warming > 0 ~ "Both",
      Warming_years > 0 & MAT_warming == 0 ~ "SW only",
      Warming_years == 0 & MAT_warming > 0 ~ "CW only",
      TRUE ~ "None"
    ),
    Symbol = case_when(
      Warming_Type == "SW only" ~ "♢",
      Warming_Type == "CW only" ~ "☀",
      Warming_Type == "Both"    ~ "♢☀",
      TRUE                      ~ ""
    )
  )

# === 5. Set forest order ===
desired_order <- c(1,3,4,6,7,8,9,11,12,14,16,18,19,20,21,22,23,24,25,26,27,30,31,32,2,5,10,13,15,17,28,29)
df_summary <- df_summary %>%
  mutate(Forest.type = factor(Forest.type, levels = as.character(desired_order)))

# === 6. Apply fixed custom palette ===
# Use gray for "0" and your 5 custom colors for 1–5 warming years
custom_palette <- c(
  "0" = "gray60",
  "1" = "#003049",
  "2" = "#d62828",
  "3" = "#f77f00",
  "4" = "#fcbf49",
  "5" = "#eae2b7"
)

# Warn if any warming years exceed the palette
extra_years <- setdiff(as.character(unique(df_summary$Warming_years)), names(custom_palette))
if (length(extra_years) > 0) {
  warning("Warming years found without color mapping: ", paste(extra_years, collapse = ", "))
}

df_summary <- df_summary %>%
  mutate(Warming_years = as.character(Warming_years))  # for fill scale

# === 7. Create Plot ===

plot <- ggplot(df_summary, aes(x = Forest.type, y = Mean_Rs_change, fill = Warming_years)) +
  geom_bar(stat = "identity", width = 0.7, color = "white") +
  geom_text(
    aes(label = Symbol),
    vjust = ifelse(df_summary$Mean_Rs_change >= 0, -0.5, 1.2),
    size = 5
  ) +
  scale_fill_manual(
    values = custom_palette,
    name = "Warming Years"
  ) +
  labs(
    x = "Forest Type",
    y = "% Change in Rs"
  ) +
  theme_minimal(base_size = 13) +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    axis.title = element_text(),
    legend.title = element_text(),
    legend.text = element_text(),
    legend.position = "bottom",  # ✅ Moves Warming Years legend below the plot
    legend.spacing.y = unit(0.5, "cm"),
    panel.grid = element_blank(),
    plot.title = element_blank()
  )

# === 3. Create Separate SW & CW Legend Below Main Legend ===
library(gridExtra)  # Ensure gridExtra is loaded

# ✅ Create the SW & CW legend as a separate plot
sw_cw_legend <- ggplot() +
  annotate("text", x = 0, y = 1, label = "♢ = SW only\n☀ = CW only", size = 5, hjust = 0) +
  theme_void()  # Removes background

# ✅ Reduce height ratio so SW & CW legend moves up
grid.arrange(plot, sw_cw_legend, ncol = 1, heights = c(3.5, 0.5))  # ✅ Moves SW & CW closer

library(ggplot2)
library(dplyr)
library(readr)
library(tidyr)
library(gridExtra)
library(grid)

# [Your full plot construction code from earlier here, unchanged]
# (Includes df_summary creation and this line at the end):
# plot <- ggplot(...) + theme(...)

# === 1. Custom SW/CW legend below ===
sw_cw_legend <- ggplot() +
  annotate("text", x = 0, y = 1, label = "♢ = SW only    ☀ = CW only", size = 5, hjust = 0) +
  theme_void()

# === 2. Combine both using arrangeGrob ===
full_plot <- arrangeGrob(
  plot,
  sw_cw_legend,
  ncol = 1,
  heights = c(4, 0.4)  # Adjust this ratio to balance size
)

# === 3. Save full combined plot ===
ggsave("plot_output.tiff", plot = full_plot, device = "tiff", dpi = 600, width = 10, height = 7, units = "in", compression = "lzw")
ggsave("plot_output.pdf", plot = full_plot, device = "pdf", width = 10, height = 7, units = "in")
